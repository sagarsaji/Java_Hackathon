1.You are given a binary string S of length N. Suppose you create another string T of size N*K by concatenating K copies of S together. 
Find the maximum size of a substring of T consisting only of 0's.



import java.io.*;
import java.util.*;
import java.lang.Math;


public class Solution {
    public static int maxSize(int N, int K, String S) {
        
        int sizee = N*K;
        int maxzero = 0;
        int count = 0;
        for(int i=0;i<sizee;i++){
            if(S.charAt(i%N)=='0'){
                count++;
                maxzero = Math.max(maxzero,count);
            }
            else{
                count=0;
            }
        }
        return maxzero;
    }

    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
    
        int N = Integer.parseInt(scan.nextLine().trim());
        
        int K = Integer.parseInt(scan.nextLine().trim());
        
        String S = scan.nextLine();
    
        int result = maxSize(N, K, S);
    
        System.out.println(result);
    }
}
